---
# Functions and routines associated with Enasis Network Orchestrations.

# This file is part of Enasis Network software eco-system. Distribution
# is permitted, for more information consult the project license file.






- name: Assert conditions for downstream tasks

  ansible.builtin.assert:
    that:

      - >-  # always in serial mode
        ansible_play_batch | length == 1

  tags: always






- name: Insert kickstart into prepare directory

  ansible.builtin.copy:
    src: '{{ item.path | default(_prvinstall_unattend) }}'
    dest: '{{ _prvinstall_prepare }}/{{ item.dest }}'
    mode: '0644'

  loop:

    - family: almalinux
      dest: kickstart.cfg

    - family: fedora
      dest: kickstart.cfg

    - family: openbsd
      dest: auto_install.conf

    - family: windows
      dest: autounattend.xml
    - family: windows
      dest: autounattend.ps1
      path: '{{ _prvinstall_unscript }}'

    - family: proxmox
      dest: answer.toml

  loop_control:
    label: '{{ item.dest }}'

  delegate_to: localhost

  when:
    - provision_install | default
    - provision_family == item.family

  tags: always






- name: Create new ISO from prepare directory
  # noqa: command-instead-of-shell

  ansible.builtin.shell: >-
      {{ item.command }}

  vars:
    unattend: '{{ _prvinstall_unattend }}'
    prepare: '{{ _prvinstall_prepare }}'
    proxmox:
      - '{{ prepare }}/auto-installer-mode.toml'
      - '{{ prepare }}/.proxmox-auto-install-iso'

  loop:

    - family: almalinux
      command: >-
        xorriso
        -indev {{ _prvinstall_source }}
        -outdev {{ _prvinstall_output }}
        -compliance no_emul_toc
        -map "{{ unattend }}" "/kickstart.cfg"
        -map "{{ prepare }}/isolinux/isolinux.cfg" "/isolinux/isolinux.cfg"
        -map "{{ prepare }}/EFI/BOOT/grub.cfg" "/EFI/BOOT/grub.cfg"
        -boot_image any replay

    - family: fedora
      command: >-
        xorriso
        -indev {{ _prvinstall_source }}
        -outdev {{ _prvinstall_output }}
        -compliance no_emul_toc
        -map "{{ unattend }}" "/kickstart.cfg"
        -map "{{ prepare }}/boot/grub2/grub.cfg" "/boot/grub2/grub.cfg"
        -map "{{ prepare }}/EFI/BOOT/grub.cfg" "/EFI/BOOT/grub.cfg"
        -map "{{ prepare }}/EFI/BOOT/BOOT.conf" "/EFI/BOOT/BOOT.conf"
        -boot_image any replay

    - family: openbsd
      command: >-
        VOLID=`isoinfo -d -i
        {{ _prvinstall_source }}
        | grep '^Volume\sid\:'
        | sed 's/Volume\sid: //'`;
        VERSION=`echo $VOLID
        | awk -F' ' '{print $2}'`;
        nice -19 mkisofs
        -volid "$VOLID"
        -rational-rock
        -no-emul-boot
        -b $VERSION/amd64/cdbr
        -c $VERSION/amd64/boot.catalog
        -o {{ _prvinstall_output }}
        {{ _prvinstall_prepare }}

    - family: windows
      command: >-
        nice -19 genisoimage
        -allow-limited-size
        -relaxed-filenames
        -iso-level 3
        -udf
        -joliet
        -full-iso9660-filenames
        -disable-deep-relocation
        -omit-version-number
        -joliet-long
        -eltorito-boot boot/etfsboot.com
        -eltorito-catalog BOOT.CAT
        -no-emul-boot
        -boot-load-size 8
        -eltorito-alt-boot
        -e efi/microsoft/boot/efisys.bin
        -no-emul-boot
        -o {{ _prvinstall_output }}
        {{ _prvinstall_prepare }}

    - family: proxmox
      command: >-
        xorriso
        -indev {{ _prvinstall_source }}
        -outdev {{ _prvinstall_output }}
        -compliance no_emul_toc
        -map "{{ unattend }}" "answer.toml"
        -map "{{ proxmox[1] }}" ".proxmox-auto-install-iso"
        -map "{{ proxmox[0] }}" "auto-installer-mode.toml"
        -boot_image any replay

  loop_control:
    label: '{{ item.family }}'

  delegate_to: localhost
  changed_when: true

  when:
    - provision_install | default
    - provision_family == item.family

  tags: always






- name: Remove kickstart from prepare directory

  ansible.builtin.file:
    path: '{{ _prvinstall_prepare }}/{{ item.path }}'
    state: absent

  loop:

    - family: almalinux
      path: kickstart.cfg

    - family: fedora
      path: kickstart.cfg

    - family: openbsd
      path: auto_install.conf

    - family: windows
      path: autounattend.xml
    - family: windows
      path: autounattend.ps1

    - family: proxmox
      path: answer.toml

  loop_control:
    label: '{{ item.path }}'

  delegate_to: localhost

  when:
    - provision_install | default
    - provision_family == item.family

  tags: always
